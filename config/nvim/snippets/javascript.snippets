snippet us
	'use strict'
snippet de
	debugger
snippet imp
	import ${1:module} from '${2:path}'

##############
# Function
##############
# arrow fn body
snippet afb
	(${1}) => {
		${2}
	}
# arrow fn expression
snippet afe
	(${1}) => ${2}
# fn anonymous generator
snippet afgn
	function* (${1}) {
		${2}
	}
# fn name
snippet fn
	function ${1:name} (${2}) {
		${3}
	}
# anonymous fn
snippet afn
	async function ${1}(${2}) {
		${3}
	}
snippet cla
	class ${1} {
		${0}
	}
snippet clex
	class ${1} extends ${2} {
		${0}
	}

snippet sto
	setTimeout(${2:function}, ${1:duration})

snippet si
	setInterval(${2:function}, ${1:duration})

##############
# console
##############
snippet cd
	console.dir(${1})
snippet ce
	console.error(${1})
snippet ci
	console.info(${1})
snippet cw
	console.warn(${1})
snippet cl
	console.log(${1})
snippet clo
	console.log({ ${1} })

##############
# Variables
##############
snippet const
	const ${1} = ${0}
snippet let
	let ${1} = ${0}

##############
# Loops
##############
snippet foreach
	${1:array}.forEach((${2:item}) => {
		${0}
	})
snippet map
	${1:array}.map((${2:item}) => {
		${0}
	})
snippet reduce
	${1:array}.reduce((${3:item}) => {
		${0}
	}, ${2:{}})
snippet forin
	for (${1:prop} in ${2:obj}) {
		if ($2.hasOwnProperty($1)) {
			${0}
		}
	}
snippet forof
	for (let ${1:elem} of ${2:obj}) {
		${0}
	}
snippet for
	for (let i = 0 i < ${1:length} i++) {
		${0}
	}
snippet while
	while (${1:condition}) {
		${0}
	}

##############
# Control
##############
snippet if
	if (${1:condition}) {
		${0}
	}
snippet ife
	if (${1:condition}) {
		${0}
	} else {
		${3}
	}
snippet ?
	${1:condition} ? ${2:then} : ${3:else}
snippet switch
	switch(${1:condition}) {
		case ${3:case}:
			${4}
		default:
			${2}
	}

##############
# JSON
##############
snippet jp
	JSON.parse(${1:obj})
snippet js
	JSON.stringify(${1:obj})

##############
# DOM
##############
snippet addEvent
	${1:document}.addEventListener('${2:event}', ${3:function})
snippet appendChild
	${1:document}.appendChild(${2:elem})
snippet getElementById
	${1:document}.getElementById('${2:id}')
snippet getElementsByClassName
	${1:document}.getElementsByClassName('${2:class}')
snippet getAttribute
	${1:document}.getAttribute('${2:attr}')
snippet querySelectorAll
	${1:document}.querySelectorAll('${2:selector}')
snippet querySelector
	${1:document}.querySelector('${2:selector}')

##############
# Node.js
##############
# ðŸ“¦ for pretty & better logging
snippet eyes
	const eyes = require('eyes').inspector({maxLength: -1});
snippet ey
	eyes({ ${1} })
snippet me
	module.exports = ${1}
snippet rq
	const ${2:name} = require('${1:package}');

##############
# React
##############
snippet imr "React Class Component"
	import React, { PureComponent } from 'react';
	import PropTypes from 'prop-types';
	import styles from './${2:$1}';

	class ${3} extends PureComponent {
		static propTypes = {
			${4:children: PropTypes.node,
			className: PropTypes.string,}
		};

		constructor(props) {
			super(props);
		}

		render() {
			return (
				<${5:div} className={styles.base}>
					$6
				</$5>
			);
		}
	}

	export default $3;

snippet r.cn "className"
	className="$1"

snippet r.set "Set State"
	this.setState({
		${1}: ${2}
	});
