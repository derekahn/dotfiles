local M = {}

local icon = require("core.icon")

function M.setup()
	vim.g.symbols_outline = {
		highlight_hovered_item = true,
		show_guides = true,
		auto_preview = true,
		position = "right",
		relative_width = true,
		width = 45,
		auto_close = false,
		show_numbers = false,
		show_relative_numbers = false,
		show_symbol_details = true,
		preview_bg_highlight = "Pmenu",
		keymaps = {
			close = { "<Esc>", "q" },
			goto_location = "<Cr>",
			focus_location = "o",
			hover_symbol = "<C-space>",
			toggle_preview = "K",
			rename_symbol = "r",
			code_actions = "a",
		},
		lsp_blacklist = {},
		symbol_blacklist = {},
		symbols = {
			File = { icon = icon.documents.File, hl = "TSURI" },
			Module = { icon = icon.kind.Module, hl = "TSNamespace" },
			Namespace = { icon = icon.kind.Namespace, hl = "TSNamespace" },
			Package = { icon = icon.kind.Module, hl = "TSNamespace" },
			Class = { icon = icon.kind.Class, hl = "TSType" },
			Method = { icon = icon.kind.Method, hl = "TSMethod" },
			Property = { icon = icon.kind.Property, hl = "TSMethod" },
			Field = { icon = icon.kind.Field, hl = "TSField" },
			Constructor = { icon = icon.kind.Constructor, hl = "TSConstructor" },
			Enum = { icon = icon.kind.Enum, hl = "TSType" },
			Interface = { icon = icon.kind.Interface, hl = "TSType" },
			Function = { icon = icon.kind.Function, hl = "TSFunction" },
			Variable = { icon = icon.kind.Variable, hl = "TSConstant" },
			Constant = { icon = icon.kind.Constant, hl = "TSConstant" },
			String = { icon = icon.type.String, hl = "TSString" },
			Number = { icon = icon.type.Number, hl = "TSNumber" },
			Boolean = { icon = icon.type.Boolean, hl = "TSBoolean" },
			Array = { icon = icon.type.Array, hl = "TSConstant" },
			Object = { icon = icon.type.Object, hl = "TSType" },
			Key = { icon = icon.kind.Keyword, hl = "TSType" },
			Null = { icon = "NULL", hl = "TSType" },
			EnumMember = { icon = icon.kind.EnumMember, hl = "TSField" },
			Struct = { icon = icon.kind.Struct, hl = "TSType" },
			Event = { icon = icon.kind.Event, hl = "TSType" },
			Operator = { icon = icon.kind.Operator, hl = "TSOperator" },
			TypeParameter = { icon = icon.kind.TypeParameter, hl = "TSParameter" },
		},
		-- symbols = {
		-- 	File = { icon = icon.documents.File, hl = "CmpItemKindFile" },
		-- 	Module = { icon = icon.kind.Module, hl = "CmpItemKindModule" },
		-- 	Namespace = { icon = icon.kind.Module, hl = "CmpItemKindModule" },
		-- 	Package = { icon = icon.kind.Module, hl = "CmpItemKindModule" },
		-- 	Class = { icon = icon.kind.Class, hl = "CmpItemKindClass" },
		-- 	Method = { icon = icon.kind.Method, hl = "CmpItemKindMethod" },
		-- 	Property = { icon = icon.kind.Property, hl = "CmpItemKindProperty" },
		-- 	Field = { icon = icon.kind.Field, hl = "CmpItemKindField" },
		-- 	Constructor = { icon = icon.kind.Constructor, hl = "CmpItemKindConstructor" },
		-- 	Enum = { icon = icon.kind.Enum, hl = "CmpItemKindEnum" },
		-- 	Interface = { icon = icon.kind.Interface, hl = "CmpItemKindInterface" },
		-- 	Function = { icon = icon.kind.Function, hl = "CmpItemKindFunction" },
		-- 	Variable = { icon = icon.kind.Variable, hl = "CmpItemKindVariable" },
		-- 	Constant = { icon = icon.kind.Constant, hl = "CmpItemKindConstant" },
		-- 	String = { icon = icon.type.String, hl = "TSString" },
		-- 	Number = { icon = icon.type.Number, hl = "TSNumber" },
		-- 	Boolean = { icon = icon.type.Boolean, hl = "TSBoolean" },
		-- 	Array = { icon = icon.type.Array, hl = "TSKeyword" },
		-- 	Object = { icon = icon.type.Object, hl = "TSKeyword" },
		-- 	Key = { icon = icon.kind.Keyword, hl = "CmpItemKeyword" },
		-- 	Null = { icon = "NULL", hl = "TSKeyword" },
		-- 	EnumMember = { icon = icon.kind.EnumMember, hl = "CmpItemKindEnumMember" },
		-- 	Struct = { icon = icon.kind.Struct, hl = "CmpItemKindStruct" },
		-- 	Event = { icon = icon.kind.Event, hl = "CmpItemKindEvent" },
		-- 	Operator = { icon = icon.kind.Operator, hl = "CmpItemKindOperator" },
		-- 	TypeParameter = { icon = icon.kind.TypeParameter, hl = "CmpItemKindTypeParameter" },
		-- },
	}
end

return M
